version: '3.9'  # Note: version field is deprecated but kept for compatibility
services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: trace_user
      POSTGRES_PASSWORD: trace_password
      POSTGRES_DB: traceability
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - postgres-data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    # Map backend to host 3001 to match README specifications
    ports:
      - "3001:3001"
      - "9229:9229"  # Debug port for Node.js debugging
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DEBUG=*
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
    environment:
      # Enable Vite proxy; route API calls through the frontend dev server
      VITE_USE_API_PROXY: 'true'
      # Backend service URL inside Docker network (used by proxy target)
      VITE_API_URL: http://backend:3001
      # Google Maps API key for Vite (read from top-level .env)
      VITE_GOOGLE_MAPS_API_KEY: ${VITE_GOOGLE_MAPS_API_KEY}
      NODE_ENV: development
      DEBUG: 'vite:*'
    ports:
      - "3000:3000"
      - "24678:24678"  # HMR websocket port
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    # Install dependencies at container start to populate node_modules volume, then start debug dev server
    command: sh -c "npm install && npm run dev:debug"

volumes:
  postgres-data:
  frontend_node_modules:
